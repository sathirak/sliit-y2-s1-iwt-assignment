/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-05-10 07:16:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class insertLocation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/common/header.jsp", Long.valueOf(1746861395726L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Add Location</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        .was-validated .form-control:invalid,\r\n");
      out.write("        .was-validated .form-select:invalid {\r\n");
      out.write("            border-color: #dc3545;\r\n");
      out.write("        }\r\n");
      out.write("        .was-validated .form-control:invalid:focus,\r\n");
      out.write("        .was-validated .form-select:invalid:focus {\r\n");
      out.write("            box-shadow: 0 0 0 0.2rem rgba(220,53,69,.25);\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <script>\r\n");
      out.write("        // Check login status immediately\r\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("            const isAuthenticated = localStorage.getItem('authenticated') === 'true';\r\n");
      out.write("            if (!isAuthenticated) {\r\n");
      out.write("                // Define redirect function for after login\r\n");
      out.write("                window.afterLoginRedirect = function() {\r\n");
      out.write("                    document.getElementById('locationFormContainer').style.display = 'block';\r\n");
      out.write("                };\r\n");
      out.write("                // Show login modal immediately\r\n");
      out.write("                setTimeout(function() {\r\n");
      out.write("                    if (typeof showLoginModal === 'function') {\r\n");
      out.write("                        showLoginModal();\r\n");
      out.write("                    }\r\n");
      out.write("                }, 300);\r\n");
      out.write("            } else {\r\n");
      out.write("                // User is already logged in, show the form\r\n");
      out.write("                document.getElementById('locationFormContainer').style.display = 'block';\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"bg-light\">\r\n");
      out.write("    ");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark mb-4\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"");
      out.print( request.getContextPath() );
      out.write("/home\">\r\n");
      out.write("            <strong>CARSONES</strong> Rental\r\n");
      out.write("        </a>\r\n");
      out.write("        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarMain\">\r\n");
      out.write("            <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("        <div class=\"collapse navbar-collapse\" id=\"navbarMain\">\r\n");
      out.write("            <ul class=\"navbar-nav me-auto\">\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link ");
      out.print( request.getServletPath().contains("reservation") ? "active" : "" );
      out.write("\" \r\n");
      out.write("                       href=\"");
      out.print( request.getContextPath() );
      out.write("/reservation\">Reservations</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link ");
      out.print( request.getServletPath().contains("user") ? "active" : "" );
      out.write("\" \r\n");
      out.write("                       href=\"");
      out.print( request.getContextPath() );
      out.write("/user\">Users</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link ");
      out.print( request.getServletPath().contains("vehicle") ? "active" : "" );
      out.write("\" \r\n");
      out.write("                       href=\"");
      out.print( request.getContextPath() );
      out.write("/vehicle\">Vehicles</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link ");
      out.print( request.getServletPath().contains("location") ? "active" : "" );
      out.write("\" \r\n");
      out.write("                       href=\"");
      out.print( request.getContextPath() );
      out.write("/location\">Locations</a>\r\n");
      out.write("                </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("            <div class=\"d-flex\" id=\"authSection\">\r\n");
      out.write("                <!-- Auth buttons will be inserted here by JavaScript -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<!-- Login Modal -->\r\n");
      out.write("<div class=\"modal fade\" id=\"loginModal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <h5 class=\"modal-title\">Login Required</h5>\r\n");
      out.write("                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <form id=\"loginForm\">\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"username\" class=\"form-label\">Username</label>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"username\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"password\" class=\"form-label\">Password</label>\r\n");
      out.write("                        <input type=\"password\" class=\"form-control\" id=\"password\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div id=\"loginError\" class=\"text-danger mb-3\" style=\"display:none;\">\r\n");
      out.write("                        Invalid username or password.\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" onclick=\"authenticate()\">Login</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    // Run immediately to prevent flash of unauthenticated content\r\n");
      out.write("    (function() {\r\n");
      out.write("        const isAuthenticated = localStorage.getItem('authenticated') === 'true';\r\n");
      out.write("        const username = localStorage.getItem('username');\r\n");
      out.write("        \r\n");
      out.write("        if (isAuthenticated && username) {\r\n");
      out.write("            document.getElementById('authSection').innerHTML = `\r\n");
      out.write("                <span class=\"text-light me-3 d-flex align-items-center\">Welcome, ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("                <button class=\"btn btn-outline-light btn-sm\" onclick=\"logout()\">Logout</button>\r\n");
      out.write("            `;\r\n");
      out.write("        } else {\r\n");
      out.write("            document.getElementById('authSection').innerHTML = `\r\n");
      out.write("                <button class=\"btn btn-outline-light btn-sm\" onclick=\"showLoginModal()\">Login</button>\r\n");
      out.write("            `;\r\n");
      out.write("        }\r\n");
      out.write("    })();\r\n");
      out.write("    \r\n");
      out.write("    function updateAuthUI() {\r\n");
      out.write("        const authSection = document.getElementById('authSection');\r\n");
      out.write("        const isAuthenticated = localStorage.getItem('authenticated') === 'true';\r\n");
      out.write("        const username = localStorage.getItem('username');\r\n");
      out.write("        \r\n");
      out.write("        if (isAuthenticated && username) {\r\n");
      out.write("            authSection.innerHTML = `\r\n");
      out.write("                <span class=\"text-light me-3 d-flex align-items-center\">Welcome, ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("                <button class=\"btn btn-outline-light btn-sm\" onclick=\"logout()\">Logout</button>\r\n");
      out.write("            `;\r\n");
      out.write("        } else {\r\n");
      out.write("            authSection.innerHTML = `\r\n");
      out.write("                <button class=\"btn btn-outline-light btn-sm\" onclick=\"showLoginModal()\">Login</button>\r\n");
      out.write("            `;\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function showLoginModal() {\r\n");
      out.write("        // Reset form fields and error message\r\n");
      out.write("        document.getElementById('username').value = '';\r\n");
      out.write("        document.getElementById('password').value = '';\r\n");
      out.write("        document.getElementById('loginError').style.display = 'none';\r\n");
      out.write("        \r\n");
      out.write("        const loginModal = new bootstrap.Modal(document.getElementById('loginModal'));\r\n");
      out.write("        loginModal.show();\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function authenticate() {\r\n");
      out.write("        const username = document.getElementById('username').value;\r\n");
      out.write("        const password = document.getElementById('password').value;\r\n");
      out.write("        \r\n");
      out.write("        if (username === 'admin' && password === '123abc') {\r\n");
      out.write("            // Store authentication in localStorage with no expiration\r\n");
      out.write("            localStorage.setItem('authenticated', 'true');\r\n");
      out.write("            localStorage.setItem('username', username);\r\n");
      out.write("            \r\n");
      out.write("            // Close modal and update UI\r\n");
      out.write("            bootstrap.Modal.getInstance(document.getElementById('loginModal')).hide();\r\n");
      out.write("            updateAuthUI();\r\n");
      out.write("            \r\n");
      out.write("            // If there's a redirect function waiting, call it\r\n");
      out.write("            if (typeof afterLoginRedirect === 'function') {\r\n");
      out.write("                afterLoginRedirect();\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Reload the page to ensure all authentication-dependent content is shown\r\n");
      out.write("            window.location.reload();\r\n");
      out.write("        } else {\r\n");
      out.write("            document.getElementById('loginError').style.display = 'block';\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function logout() {\r\n");
      out.write("        localStorage.removeItem('authenticated');\r\n");
      out.write("        localStorage.removeItem('username');\r\n");
      out.write("        updateAuthUI();\r\n");
      out.write("        // Redirect to home page on logout\r\n");
      out.write("        window.location.href = '");
      out.print( request.getContextPath() );
      out.write("/home';\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    // Check if user is authenticated\r\n");
      out.write("    function isAuthenticated() {\r\n");
      out.write("        return localStorage.getItem('authenticated') === 'true';\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"container mt-5\" id=\"locationFormContainer\" style=\"display: none\">\r\n");
      out.write("        <h2 class=\"mb-4\">Add New Location</h2>\r\n");
      out.write("        \r\n");
      out.write("        <form action=\"insert\" method=\"post\" \r\n");
      out.write("              class=\"row g-3 bg-white p-4 rounded shadow-sm needs-validation\" novalidate>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"col-md-6\">\r\n");
      out.write("                <label for=\"district\" class=\"form-label\">District</label>\r\n");
      out.write("                <input type=\"text\" id=\"district\" name=\"district\" class=\"form-control\" required>\r\n");
      out.write("                <div class=\"invalid-feedback\">Please provide a district.</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"col-md-6\">\r\n");
      out.write("                <label for=\"location_contact_no\" class=\"form-label\">Contact No</label>\r\n");
      out.write("                <input type=\"number\" id=\"location_contact_no\" name=\"location_contact_no\" class=\"form-control\" required>\r\n");
      out.write("                <div class=\"invalid-feedback\">Please provide a contact number.</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"col-md-6\">\r\n");
      out.write("                <label for=\"street_no\" class=\"form-label\">Street No</label>\r\n");
      out.write("                <input type=\"text\" id=\"street_no\" name=\"street_no\" class=\"form-control\" required>\r\n");
      out.write("                <div class=\"invalid-feedback\">Please provide a street number.</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"col-md-6\">\r\n");
      out.write("                <label for=\"street\" class=\"form-label\">Street</label>\r\n");
      out.write("                <input type=\"text\" id=\"street\" name=\"street\" class=\"form-control\" required>\r\n");
      out.write("                <div class=\"invalid-feedback\">Please provide a street name.</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"col-md-6\">\r\n");
      out.write("                <label for=\"city\" class=\"form-label\">City</label>\r\n");
      out.write("                <input type=\"text\" id=\"city\" name=\"city\" class=\"form-control\" required>\r\n");
      out.write("                <div class=\"invalid-feedback\">Please provide a city.</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-success\">Submit</button>\r\n");
      out.write("                <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/location\" class=\"btn btn-secondary ms-2\">Back to List</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Bootstrap JS -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Bootstrap Validation Script -->\r\n");
      out.write("    <script>\r\n");
      out.write("        (function () {\r\n");
      out.write("            'use strict';\r\n");
      out.write("            const forms = document.querySelectorAll('.needs-validation');\r\n");
      out.write("            Array.from(forms).forEach(function (form) {\r\n");
      out.write("                form.addEventListener('submit', function (event) {\r\n");
      out.write("                    if (!form.checkValidity()) {\r\n");
      out.write("                        event.preventDefault();\r\n");
      out.write("                        event.stopPropagation();\r\n");
      out.write("                    }\r\n");
      out.write("                    form.classList.add('was-validated');\r\n");
      out.write("                }, false);\r\n");
      out.write("            });\r\n");
      out.write("        })();\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
